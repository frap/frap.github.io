<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: emacs-live | Andrés Gasson.]]></title>
  <link href="http://www.red-elvis.net/categories/emacs-live/atom.xml" rel="self"/>
  <link href="http://www.red-elvis.net/"/>
  <updated>2013-07-08T15:57:19+12:00</updated>
  <id>http://www.red-elvis.net/</id>
  <author>
    <name><![CDATA[Andrés Gasson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Org-mode and Octopress]]></title>
    <link href="http://www.red-elvis.net/blog/2013/07/08/org-mode-and-octopress.html"/>
    <updated>2013-07-08T00:00:00+12:00</updated>
    <id>http://www.red-elvis.net/blog/2013/07/08/org-mode-and-octopress</id>
    <content type="html"><![CDATA[<p>I have recently just started re-blogging again. I used markdown previously to store note and am at present reformatting them to be compatible with this blog. I have decided on using <a href="http:octopress.org">Octopress</a>
which is based on <a href="http://jekyllrb.com/">Jekyll</a>. Why? because you can easily use <a href="http://github.io">GitHub Pages</a> to host your site, its static files (no database setup hassle) and therefore
integrates with <a href="http://orgmode.org">Org Mode</a> which I use to take notes. (Also its byline Blogging for Hackers resonates :)</p>

<p>However setting it up to work with org-mode is key for me. OrgMode has recently upgraded and deprecated some older stuff as of <a href="http://orgmode.org/Changes.html">Org-Mode 8.0</a>. One of the
main changes is org-mode publishing which has been completely replaced and we have new packages like <a href="http://orgmode.org/worg/exporters/ox-overview.html">ox-md.el</a> for Markdown exporting.</p>

<p>Finding orgmode octopress integrations that use new publishing was limited. The only thing I could find is <a href="https://github.com/yoshinari-nomura/org-octopress">Yoshinari Nomura&rsquo;s org-octopress</a>. This is really
good however it does have a few idiosyncracies (well to me anyway)!</p>

<ol>
<li><p>It publishes to html &ndash; I would prefer it jsut changed org-mode to Markdown and use octopress rake tools to manage the publishing</p></li>
<li><p>It relies on Yoshinari&rsquo;s &ldquo;orglue&rdquo; org-mode setup as well as ctables (ctables looks good &ndash; but dont have need as yet for complicated tables &ndash; add  another TODO!)</p></li>
</ol>


<p>So I have started hacking around with it so it better meets my needs. One of those requirements is to export directly to Markdown so I have changed
the <a href="https://github.com/yoshinari-nomura/org-octopress/blob/master/ox-jekyll.el">ox-jekyll.el</a> functions to use Markdown export.</p>

<!-- more -->


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">org-jekyll-export-as-md</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">&amp;amp</span><span class="c1">;optional async subtreep visible-only body-only ext-plist)</span>
</span><span class='line'>  <span class="nv">&amp;ldquo</span><span class="c1">;Export current buffer to a Markdown buffer adding some YAML front matter.&amp;rdquo;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="k">if</span> <span class="nv">async&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;pre&gt;&lt;code&gt;</span>  <span class="p">(</span><span class="nv">org-export-async-start</span>
</span><span class='line'>      <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">output</span><span class="p">)</span>
</span><span class='line'>        <span class="p">(</span><span class="nv">with-current-buffer</span> <span class="p">(</span><span class="nv">get-buffer-create</span> <span class="s">&quot;**Org Jekyll MD Export**&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">erase-buffer</span><span class="p">)</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">insert</span> <span class="nv">output</span><span class="p">)</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">goto-char</span> <span class="p">(</span><span class="nv">point-min</span><span class="p">))</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">text-mode</span><span class="p">)</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">org-export-add-to-stack</span> <span class="p">(</span><span class="nv">current-buffer</span><span class="p">)</span> <span class="ss">&#39;jekyll</span><span class="p">)))</span>
</span><span class='line'>    <span class="nv">\`</span><span class="p">(</span><span class="nv">org-export-as</span> <span class="ss">&#39;jekyll</span> <span class="o">,</span><span class="nv">subtreep</span> <span class="o">,</span><span class="nv">visible-only</span> <span class="o">,</span><span class="nv">body-only</span> <span class="ss">&#39;,ext-plist</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">outbuf</span> <span class="p">(</span><span class="nv">org-export-to-buffer</span>
</span><span class='line'>               <span class="ss">&#39;jekyll</span> <span class="s">&quot;**Org Jekyll MD Export**&quot;</span>
</span><span class='line'>               <span class="nv">subtreep</span> <span class="nv">visible-only</span> <span class="nv">body-only</span> <span class="nv">ext-plist</span><span class="p">)))</span>
</span><span class='line'>  <span class="c1">;; Set major mode.</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">with-current-buffer</span> <span class="nv">outbuf</span> <span class="p">(</span><span class="nv">text-mode</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">when</span> <span class="nv">org-export-show-temporary-export-buffer</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">switch-to-buffer-other-window</span> <span class="nv">outbuf</span><span class="p">)))))</span>
</span><span class='line'><span class="nv">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">org-jekyll-export-to-md</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">&amp;amp</span><span class="c1">;optional async subtreep visible-only body-only ext-plist)</span>
</span><span class='line'>  <span class="nv">&amp;ldquo</span><span class="c1">;Export current buffer to a Markdown file adding some YAML front matter.&amp;rdquo;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">outfile</span> <span class="p">(</span><span class="nv">org-export-output-file-name</span> <span class="nv">&amp;ldquo</span><span class="c1">;.markdown&amp;rdquo; subtreep)))&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;pre&gt;&lt;code&gt;</span><span class="p">(</span><span class="k">if</span> <span class="nv">async</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">org-export-async-start</span>
</span><span class='line'>        <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">f</span><span class="p">)</span> <span class="p">(</span><span class="nv">org-export-add-to-stack</span> <span class="nv">f</span> <span class="ss">&#39;jekyll</span><span class="p">))</span>
</span><span class='line'>         <span class="nv">\`</span><span class="p">(</span><span class="nv">expand-file-name</span>
</span><span class='line'>           <span class="p">(</span><span class="nv">org-export-to-file</span>
</span><span class='line'>            <span class="ss">&#39;jekyll</span> <span class="o">,</span><span class="nv">outfile</span> <span class="o">,</span><span class="nv">subtreep</span> <span class="o">,</span><span class="nv">visible-only</span> <span class="o">,</span><span class="nv">body-only</span> <span class="ss">&#39;,ext-plist</span><span class="p">)))</span>
</span><span class='line'>     <span class="p">(</span><span class="nv">org-export-to-file</span>
</span><span class='line'>     <span class="ss">&#39;jekyll</span> <span class="nv">outfile</span> <span class="nv">subtreep</span> <span class="nv">visible-only</span> <span class="nv">body-only</span> <span class="nv">ext-plist</span><span class="p">))))</span>
</span><span class='line'><span class="nv">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>we need to also change <a href="https://github.com/yoshinari-nomura/org-octopress/blob/master/org-octopress.el">org-octopress.el</a> to change its publishing format. I think I will pack up these changes and put them into
a <a href="http://overtone.github.io/emacs-live/doc-pack-structure.html">emacs live .live_pack</a> so that I can easily control this as a package for my workflow. Thanks Yoshinari for the great package</p>

<ul>
<li>now just need to understand it a bit better!</li>
</ul>

]]></content>
  </entry>
  
</feed>
